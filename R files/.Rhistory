'prod.growth.85.10' = avg.ann.late.d.prod)
data.frame('state.order' = unique(dat$state)[order(mean.mem.69to10)],
'mean.mem' = mean.mem.69to10[order(mean.mem.69to10)],
'prod.growth.69.10' = avg.annual.d.prod[order(mean.mem.69to10)],
'prod.growth.69.84' = avg.ann.early.d.prod[order(mean.mem.69to10)],
'prod.growth.85.10' = avg.ann.late.d.prod[order(mean.mem.69to10)])
data.frame('mean.mem' = mean.mem.69to10[order(mean.mem.69to10)],
'prod.growth.69.10' = avg.annual.d.prod[order(mean.mem.69to10)],
'prod.growth.69.84' = avg.ann.early.d.prod[order(mean.mem.69to10)],
'prod.growth.85.10' = avg.ann.late.d.prod[order(mean.mem.69to10)])
plots.8.8 = data.frame('mean.mem' = mean.mem.69to10[order(mean.mem.69to10)],
'prod.growth.69.10' = avg.annual.d.prod[order(mean.mem.69to10)],
'prod.growth.69.84' = avg.ann.early.d.prod[order(mean.mem.69to10)],
'prod.growth.85.10' = avg.ann.late.d.prod[order(mean.mem.69to10)])
for (i in 2:4){
plot(plots.8.8[1], plots.8.8[i])
}
for (i in 2:4){
plot(plots.8.8[,1], plots.8.8[,i])
}
for (i in 2:4){
plot(plots.8.8[,1], plots.8.8[,i])
abline(v = mean(plots.8.8[23:24,i]))
}
for (i in 2:4){
#plot(plots.8.8[,1], plots.8.8[,i])
abline(v = mean(plots.8.8[23:24,i]))
}
for (i in 2:4){
plot(plots.8.8[,1], plots.8.8[,i])
abline(v = mean(plots.8.8[23:24,1]))
}
boxplot(avg.annual.d.prod[order(mean.mem.69to10)][1:23])
boxplot('full/low' = avg.annual.d.prod[order(mean.mem.69to10)][1:23],
'full/high' = avg.annual.d.prod[order(mean.mem.69to10)][1:23])
boxplot('full/low' = avg.annual.d.prod[order(mean.mem.69to10)][1:23])
boxplot(avg.annual.d.prod[order(mean.mem.69to10)][1:23], #full/low
avg.annual.d.prod[order(mean.mem.69to10)][24:46], #full/high
avg.ann.early.d.prod[order(mean.mem.69to10)][1:23], #early/low
avg.ann.early.d.prod[order(mean.mem.69to10)][24:46], #early/high
avg.ann.late.d.prod[order(mean.mem.69to10)][1:23], #late/low
avg.ann.late.d.prod[order(mean.mem.69to10)][24:46]) #late/high
avg.ann.early.d.prod
boxplot(avg.annual.d.prod[order(mean.mem.69to10)][1:23], #full/low
avg.annual.d.prod[order(mean.mem.69to10)][24:46]) #full/high
boxplot(avg.ann.early.d.prod[order(mean.mem.69to10)][1:23], #early/low
avg.ann.early.d.prod[order(mean.mem.69to10)][24:46]) #early/high
boxplot(avg.ann.late.d.prod[order(mean.mem.69to10)][1:23], #late/low
avg.ann.late.d.prod[order(mean.mem.69to10)][24:46]) #late/high
for (i in 2:4){
for (j in 1:2){
if(j = 1){
plot(plots.8.8[1:23,1], plots.8.8[1:23,i])
} else {
plot(plots.8.8[24:46,1], plots.8.8[24:46,i])
}
}
for (i in 2:4){
for (j in 1:2){
if(j == 1){
plot(plots.8.8[1:23,1], plots.8.8[1:23,i])
} else {
plot(plots.8.8[24:46,1], plots.8.8[24:46,i])
}
}
}
for (i in 2:4){
for (j in 1:2){
if(j == 1){
plot(plots.8.8[1:23,1], plots.8.8[1:23,i])
} else {
plot(plots.8.8[24:46,1], plots.8.8[24:46,i])
}
}
}
for (i in 2:4){
for (j in 1:2){
if(j == 1){
plot(plots.8.8[,1], plots.8.8[1:23,i])
} else {
plot(plots.8.8[,1], plots.8.8[24:46,i])
}
}
}
load('.Rdata')
fix(xy.fit.line)
k.wk.beg.and.end.avgs(dat, productivity, 2, 1969, 2010)
k.wk.beg.and.end.avgs(dat, 'productivity', 2, 1969, 2010)
k.wk.beg.and.end.avgs(dat, 'mem', union.years[1], union.years[2])
union.years = c(1969, 1971)
k.wk.beg.and.end.avgs(dat, 'mem', union.years[1], union.years[2])
k.wk.beg.and.end.avgs(dat, 'mem', union.years[2]-union.years[1] + 1, union.years[1], union.years[2])
union.years = c(1969, 2010)
k.wk.beg.and.end.avgs(dat, 'mem', union.years[2]-union.years[1] + 1, union.years[1], union.years[2])
k.wk.beg.and.end.avgs(dat, 'mem', 3, union.years[1], union.years[2])
dat$productivity[20:29]
prod.y1 = c(1969, 1969, 1969, 1969, 1985, 1985)
prod.y2 = c(2008, 2008, 1982, 1982, 2008, 2008)
k.wk.beg.and.end.avgs(dat, 'productivity', 3, prod.y1[1], prod.y2[1])
(prod.y2[1] - prod.y1[1] - 2 + 1)
prod.y2[1]
prod.y2 = c(2010, 2010, 1984, 1984, 2010, 2010)
(prod.y2[1] - prod.y1[1] - 2 + 1)
temp = k.wk.beg.and.end.avgs(dat, 'productivity', 3, prod.y1[1], prod.y2[1])
final = temp[,2]
initial = temp[,1]
d.prod = (final - initial)/inital
prod.growth = d.prod/(prod.y2[1] - prod.y1[1] - 2 + 1)
d.prod = (final - initial)/initial
prod.growth = d.prod/(prod.y2[1] - prod.y1[1] - 2 + 1)
prod.growth
prod.growth = 100*d.prod/(prod.y2[1] - prod.y1[1] - 2 + 1)
prod.growth
dat$productivity[dat$state == 'Montana']
union.share = k.wk.beg.and.end.avgs(dat, 'mem', 3, union.x[1], 2010)
union.x = c(1969, 1989, 1969, 1976, 1985, 1997)
union.share
union.share = k.wk.beg.and.end.avgs(dat, 'mem', 3, union.x[1], 2010)
union.share
union.share = k.wk.beg.and.end.avgs(dat, 'mem', 3, union.x[1], 2010)[1]
union.share
union.share = k.wk.beg.and.end.avgs(dat, 'mem', 3, union.x[1], 2010)[,1]
union.share
union.x = c(1969, 1989, 1969, 1976, 1985, 1997)
unionShare = list()
prod.y1 = c(1969, 1969, 1969, 1969, 1985, 1985)
prod.y2 = c(2010, 2010, 1984, 1984, 2010, 2010)
prodGrowth = list()
for (i in 1:6){
unionShare[[i]] = k.wk.beg.and.end.avgs(dat, 'mem', 3, union.x[i], 2010)[,1]
temp = k.wk.beg.and.end.avgs(dat, 'productivity', 3, prod.y1[i], prod.y2[i])
final = temp[,2]
initial = temp[,1]
d.prod = (final - initial)/initial
prodGrowth[[i]] = 100*d.prod/(prod.y2[i] - prod.y1[i] - 2 + 1)
plot(unionShare[[i]], prodGrowth[[i]])
}
xy.fit.line(unionShare[[i]], prodGrowth[[i]], text = T,
maintext = NA, xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, xticks = x.ticks, yticks = y.ticks, slope.text.cex = .65,
x.pos = bottom, y.pos = left, top.pos = top, right.pos = right)
for (i in 1:6){
xy.fit.line(unionShare[[i]], prodGrowth[[i]], text = T,
maintext = NA, xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, xticks = x.ticks, yticks = y.ticks, slope.text.cex = .65,
x.pos = bottom, y.pos = left, top.pos = top, right.pos = right)
}
for (i in 1:6){
unionShare[[i]] = k.wk.beg.and.end.avgs(dat[!dat$state=='Oregon',], 'mem', 3, union.x[i], 2010)[,1]
temp = k.wk.beg.and.end.avgs(dat[!dat$state=='Oregon',], 'productivity', 3, prod.y1[i], prod.y2[i])
final = temp[,2]
initial = temp[,1]
d.prod = (final - initial)/initial
prodGrowth[[i]] = 100*d.prod/(prod.y2[i] - prod.y1[i] - 2 + 1)
}
for (i in 1:6){
xy.fit.line(unionShare[[i]], prodGrowth[[i]], text = T,
maintext = NA, xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, xticks = x.ticks, yticks = y.ticks, slope.text.cex = .65,
x.pos = bottom, y.pos = left, top.pos = top, right.pos = right)
}
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
maintext = NA, xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (initial union share)')
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (initial union share)')
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union share)')
for (i in 1:6){
unionShare[[i]] = k.wk.beg.and.end.avgs(dat, 'mem', 3, union.x[i], 2010)[,1]
temp = k.wk.beg.and.end.avgs(dat, 'productivity', 3, prod.y1[i], prod.y2[i])
final = temp[,2]
initial = temp[,1]
d.prod = (final - initial)/initial
prodGrowth[[i]] = 100*d.prod/(prod.y2[i] - prod.y1[i] - 2 + 1)
}
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union share)')
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union share)', main.cex = .7)
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)', main.cex = .7)
par(mfrow = c(2, 2, 4, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
par(mar = c(2, 2, 4, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
par(mar = c(2, 2, 4, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)', main.cex = .7)
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union share)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union share)')
xy.fit.line(unionShare[[3]], prodGrowth[[3]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[3]], prodGrowth[[3]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 20, slope.text.y = -.25, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 8, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 9, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[5]], prodGrowth[[5]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[6]], prodGrowth[[6]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[3]], prodGrowth[[3]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 20, slope.text.y = -.25, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs initial union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[5]], prodGrowth[[5]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[6]], prodGrowth[[6]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs midpoint union)')
par(mar = c(2, 2, 3, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
par(mar = c(2, 2, 2, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[3]], prodGrowth[[3]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 20, slope.text.y = -.25, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs initial union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[5]], prodGrowth[[5]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[6]], prodGrowth[[6]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs midpoint union)')
par(mar = c(2, 2, 2, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[3]], prodGrowth[[3]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 20, slope.text.y = -.25, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs initial union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[5]], prodGrowth[[5]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[6]], prodGrowth[[6]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs midpoint union)')
pdf(file = 'productivityGrowthVersusUnionShare.pdf')
par(mar = c(2, 2, 2, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[3]], prodGrowth[[3]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 20, slope.text.y = -.25, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs initial union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[5]], prodGrowth[[5]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[6]], prodGrowth[[6]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs midpoint union)')
dev.off()
pdf(file = 'productivityGrowthVersusUnionShare22August2012.pdf')
par(mar = c(2, 2, 2, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[3]], prodGrowth[[3]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 20, slope.text.y = -.25, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs initial union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[5]], prodGrowth[[5]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[6]], prodGrowth[[6]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs midpoint union)')
dev.off()
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 15, slope.text.y = .75, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T,
slope.text.x = 10, slope.text.y = .75, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = .8
slope.text.x = 15, slope.text.y = .5, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = .8,
slope.text.x = 15, slope.text.y = .5, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = 1,
slope.text.x = 15, slope.text.y = .5, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
pdf(file = 'productivityGrowthVersusUnionShare22August2012.pdf')
par(mar = c(2, 2, 2, 2))
xy.fit.line(unionShare[[1]], prodGrowth[[1]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = 1,
slope.text.x = 15, slope.text.y = .5, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[2]], prodGrowth[[2]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = 1,
slope.text.x = 10, slope.text.y = .5, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 10 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[3]], prodGrowth[[3]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = 1,
slope.text.x = 20, slope.text.y = -.25, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs initial union)')
xy.fit.line(unionShare[[4]], prodGrowth[[4]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = 1,
slope.text.x = 10, slope.text.y = 0, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '69 to 84 (productivity growth vs midpoint union)')
xy.fit.line(unionShare[[5]], prodGrowth[[5]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = 1,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs initial union)')
xy.fit.line(unionShare[[6]], prodGrowth[[6]], text = T,
xtext = NA, ytext = NA, slope.text = T, slope.text.cex = 1,
slope.text.x = 10, slope.text.y = .55, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = F, maintext = '85 to 10 (productivity growth vs midpoint union)')
dev.off()
load('.Rdata')
top = 2.785; right = .605; bottom = -.2; left = -.069
x.ticks = c(left-1, seq(0,.6, by = .1), right+1)
y.ticks = c(bottom-1, seq(0, 2.5, by = .5), top+1)
par(mar = c(1.7, 2, .7, .5))
xy.fit.line(avg.annual.d.manuf, avg.annual.d.prod, text = T,
slope.text = T, slope.text.x = .35, slope.text.y = .55,
s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = T, xticks = x.ticks, yticks = y.ticks,
slope.text.cex = .65, x.pos = bottom, y.pos = left,
top.pos = top, right.pos = right)
top = 2.785; right = .73; bottom = -.2; left = .068
x.ticks = c(left-1, seq(.1,.7, by = .1), right+1)
y.ticks = c(bottom-1, seq(0, 2.5, by = .5), top+1)
par(mar = c(1.7, 2, .7, .5))
xy.fit.line(avg.annual.d.mem, avg.annual.d.prod, text = T,
maintext = NA, xtext = NA, ytext = NA, slope.text = T,
slope.text.x = .22, slope.text.y = .5, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = T, xticks = x.ticks, yticks = y.ticks, slope.text.cex = .65,
x.pos = bottom, y.pos = left, top.pos = top, right.pos = right)
load('.Rdata')
top = 2.785; right = .605; bottom = -.2; left = -.069
x.ticks = c(left-1, seq(0,.6, by = .1), right+1)
y.ticks = c(bottom-1, seq(0, 2.5, by = .5), top+1)
par(mar = c(1.7, 2, .7, .5))
xy.fit.line(avg.annual.d.manuf, avg.annual.d.prod, text = T,
slope.text = T, slope.text.x = .35, slope.text.y = .55,
s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = T, xticks = x.ticks, yticks = y.ticks,
slope.text.cex = .65, x.pos = bottom, y.pos = left,
top.pos = top, right.pos = right)
top = 2.785; right = .73; bottom = -.2; left = .068
x.ticks = c(left-1, seq(.1,.7, by = .1), right+1)
y.ticks = c(bottom-1, seq(0, 2.5, by = .5), top+1)
par(mar = c(1.7, 2, .7, .5))
xy.fit.line(avg.annual.d.mem, avg.annual.d.prod, text = T,
maintext = NA, xtext = NA, ytext = NA, slope.text = T,
slope.text.x = .22, slope.text.y = .5, s.t.str.vec = c('slope = ', '\n      p = '),
manual.axes = T, xticks = x.ticks, yticks = y.ticks, slope.text.cex = .65,
x.pos = bottom, y.pos = left, top.pos = top, right.pos = right)
states
length(avg.annual.d.mem)
output9.29 = data.frame(states, avg.annual.d.mem, avg.annual.d.prod)
output9.29
output9.29 = data.frame(avg.annual.d.mem, avg.annual.d.prod)
output9.29
names(output9.29) = c('Annual decline in unionization',
'Annual change in productivity')
output9.29
write.table(output9.29)
write.table(output9.29, file = '9/29_output.txt')
write.table(output9.29, file = '9.29.output.txt')
lm(avg.annual.d.prod, avg.annual.d.mem)
lm(avg.annual.d.prod ~ avg.annual.d.mem)
summary(lm(avg.annual.d.prod ~ avg.annual.d.mem))
corr(avg.annual.d.prod, avg.annual.d.mem)
cor(avg.annual.d.prod, avg.annual.d.mem)
state.abbr[1]
state.ab[1]
?state
state.abb[1]
is.element(states, state.name)
is.element(state.name, states)
state.abb[is.element(state.name, states)]
output9.29 = data.frame(state.abb[is.element(state.name, states)], avg.annual.d.mem, avg.annual.d.prod)
write.table(state.abb[is.element(state.name, states)], file = 'state.abbs.txt')
?commandArgs
?batch
?BATCH
?keyword
?stdout
