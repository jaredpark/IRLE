source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v2.R')
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
doc = htmlTreeParse('http://www.allmenus.com/ca/berkeley/-/', isURL = T)
top = xmlRoot(doc)
children = xmlChildren(top)$body
as.character(xmlApply(children, xmlAttrs))
as.character(xmlApply(children$content, xmlAttrs))
top = xmlRoot(doc)
children = xmlChildren(top)$body
path = which(as.character(xmlApply(children, xmlAttrs)) == 'content')
path
content.node = children[[path]]
path = which(as.character(xmlApply(content.node, xmlAttrs)) == 'restaurant_list')
path
city
xmlApply(content.node, xmlAttrs)
path = which(as.character(xmlApply(content.node, xmlAttrs)) == 'restaurant_list')
path
rest.node = content.node[[path]]
which(as.character(names(rest.node)) == 'ol')
path = which(as.character(names(rest.node)) == 'ol')
path
rest.nodes = rest.list.node[[path]]
rest.list.node = content.node[[path]]
children = xmlChildren(top)$body
path = which(as.character(xmlApply(children, xmlAttrs)) == 'content')
content.node = children[[path]]
path = which(as.character(xmlApply(content.node, xmlAttrs)) == 'restaurant_list')
rest.list.node = content.node[[path]]
path = which(as.character(names(rest.list.node)) == 'ol')
rest.nodes = rest.list.node[[path]]
rest = 1
rest.node = rest.nodes[[rest]]
rest.path = which(as.character(xmlApply(rest.node, xmlAttrs)) == 'basics')
rest.name.p = which(as.character(xmlApply(rest.node[[rest.path]], xmlAttrs)) == 'restaurant_name')
rest.href = as.character(xmlApply(rest.node[[rest.path]][[rest.name.p]], xmlGetAttr, name = 'href'))
rest.name = as.character(xmlValue(rest.node[[rest.path]][[rest.name.p]]))
rest.addr.p = which(as.character(xmlApply(rest.node[[rest.path]], xmlAttrs)) == 'restaurant_address')
rest.addr = as.character(xmlValue(rest.node[[rest.path]][[rest.addr.p]]))
rest.url = paste('http://www.allmenus.com', rest.href, sep = '')
city.rest.urls = c(city.rest.urls, rest.url)
rest.names = c(rest.names, rest.name)
rest.addrs = c(rest.addrs, rest.addr)
a = get.city.rest.urls('ca', 'berkeley')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'berkeley')
b = alt.menu.urls(a)
b[[1]][[1]]
b[[1]][[2]]
b[[1]][[3]]
b[[2]][[1]]
b[[3]][[1]]
b[[4]][[1]]
b[[4]]
b[[1]]
c = get.menu.docs(b)
dim(c)
length(c)
length(c[[1]])
d = menu.to.matrix(c[[1]][[1]])
d
as.data.frame(d, stringsAsFactors = F)
as.data.frame(d, stringsAsFactors = F, row.names = F)
source('scrape.funcs.v3.R')
for (nm.city in 1:length(nm.cities)){
print(nm.cities[nm.city])
get.menus('nm', nm.cities[nm.city], file.location)
}
file.location
file.location = '~/projects/Reich/menu.scrape/outputs.pull2/'
ca.cities = c('fremont', 'union-city', 'hayward', 'san-leandro', 'oakland', 'berkeley',
tolower(c('Campbell', 'Cupertino', 'Gilroy', 'Los-Altos', 'Los-Altos-Hills',
'Los-Gatos', 'Milpitas', 'Monte-Sereno', 'Morgan-Hill', 'Mountain-View',
'Palo-Alto', 'Santa-Clara', 'Saratoga', 'Sunnyvale', 'San-Jose')))
nm.cities = c('albuquerque', 'rio-rancho', 'santa-fe', 'las-cruces')
source('scrape.funcs.v3.R')
nm.cities = 'las-cruces'
for (nm.city in 1:length(nm.cities)){
print(nm.cities[nm.city])
get.menus('nm', nm.cities[nm.city], file.location)
}
nm = state.to.df('nm', file.location)
nm2 = nm
getwd()
load('./NM_12_24_2012.Rout')
load('./outputs.v2/NM_12_24_2012.Rout')
nm[1:5, 1:10]
unique(nm$city)
which(nm$city == 'Las Cruces')
lcIndex = which(nm$city == 'Las Cruces')
nm = nm[lcIndex, ]
early = nm
later = nm2
plot(nm$item.price, nm2$item.price)
plot(nm$item.price, nm2$item.price, na.action = na.omit)
plot(na.exclude(nm$item.price), na.exclude(nm2$item.price))
colnames(early)
plot(early$price, later$price)
lc1 = nm
lc2 = nm2
t0 = nm
t1 = nm2
nm$menu[1:100]
if (NA != True){
print('hi')}
if (NA != T){
print('hi')}
if (NULL != T){
print('hi')}
which(1:5 > 6)
source('analyzeFuncs.R')
source('analyzeFuncs.R')
getwd
getwd()
early = load('./outputs.v2/NM_12_24_2012.Rout')
early = load('./outputs.v2/NM_12_24_2012.Rout')
lascrucesIndex = which(early$city == 'Las Cruces')
load('./outputs.v2/NM_12_24_2012.Rout')
later = nm2
early = nm
lascrucesIndex = which(early$city == 'Las Cruces')
early = early[lascrucesIndex, ]
a = pricesToDifferences(early, later)
source('analyzeFuncs.R')
a = pricesToDifferences(early, later)
source('scrape.funcs.v3.R')
a = pricesToDifferences(early, later)
which(a[,1] == 'weird')
table(a[,1])
table(early[,1])
table(a[,1]) - table(early[,1])
table(a[,1])
table(early[,1])
a[a$restaurant == 'American BBQ Factory', ]
early[early$restaurant == 'American BBQ Factory', ]
a[a$restaurant == 'American BBQ Factory', 9]
early[early$restaurant == 'American BBQ Factory', 9]
a[a$restaurant == 'American BBQ Factory', 9]
a[a$restaurant == 'American BBQ Factory', ]
source('analyzeFuncs.R')
a = pricesToDifferences(early, later)
source('analyzeFuncs.R')
a = pricesToDifferences(early, later)
table(a[,1])
table(early[,1])
a[a$restaurant == 'Corner Deli', ]
early[a$restaurant == 'Corner Deli', ]
a[a$restaurant == 'Corner Deli', 9]
early[a$restaurant == 'Corner Deli', 9]
early[early$restaurant == 'Corner Deli', 9]
a[a$restaurant == 'Corner Deli', 9]
later[later$restaurant == 'Corner Deli', 9]
later[later$restaurant == 'Corner Deli', ]
early[early$restaurant == 'Corner Deli', 9]
early[early$restaurant == 'Corner Deli', ]
source('analyzeFuncs.R')
a = pricesToDifferences(early, later)
plot(na.exclude(early$price), na.exclude(later$price))
plot(early$price, later$price)
plot(early$price, a$price)
plot(early$price, a$price, ylim = c(0,20), xlim = c(0,20))
plot(early$low, a$low, ylim = c(0,20), xlim = c(0,20))
plot(early$high, a$high, ylim = c(0,20), xlim = c(0,20))
plot(early$price, a$price, ylim = c(0,20), xlim = c(0,20))
mean(early$price == later$price)
d = a$price - early$price
summary(a$price)
)summary(as.numeric(a$price)
summary(as.numeric(a$price))
d = as.numeric(a$price) - early$price
d = as.numeric(a$price) - as.numeric(early$price)
plot(d)
restWithDiff = unique(early$restaurant[d != 0])
restWithDiff
restNoDiff = unique(early$restaurant[d == 0])
restNoDiff
restWithDiff = unique(early$restaurant)[!restNoDiff]
restWithDiff = unique(early$restaurant)[!is.element(unique(early$restaurant), restNoDiff)]
restWithDiff
restNoDiff = unique(early$restaurant[d == 0])
restWithDiff = unique(early$restaurant[d != 0])
c(restNoDiff, restWithDiff)
early[is.element(early$restaurant, restWithDiff), ]
early[d != 0, ]
mean(d!=0)
date = '03_09_2013'
file.location = '~/projects/Reich/menu.scrape/outputs.pull2/'
ca.cities = c('fremont', 'union-city', 'hayward', 'san-leandro', 'oakland', 'berkeley',
tolower(c('Campbell', 'Cupertino', 'Gilroy', 'Los-Altos', 'Los-Altos-Hills',
'Los-Gatos', 'Milpitas', 'Monte-Sereno', 'Morgan-Hill', 'Mountain-View',
'Palo-Alto', 'Santa-Clara', 'Saratoga', 'Sunnyvale', 'San-Jose')))
nm.cities = c('albuquerque', 'rio-rancho', 'santa-fe', 'las-cruces')
source('scrape.funcs.v3.R')
for (nm.city in 1:length(nm.cities)){
print(nm.cities[nm.city])
get.menus('nm', nm.cities[nm.city], file.location)
}
for (ca.city in 1:length(ca.cities)){
print(ca.cities[ca.city])
get.menus('ca', ca.cities[ca.city], file.location)
}
source('scrape.funcs.v3.R')
file.location = '~/projects/Reich/menu.scrape/outputs.pull2/'
a = get.menus('ca', 'san-jose', file.location)
main.urls = get.city.rest.urls('ca', 'san-jose')
all.urls = alt.menu.urls(main.urls)
source('scrape.funcs.v3.R')
all.urls = alt.menu.urls(main.urls)
rest = 121
source('scrape.funcs.v3.R')
all.urls = alt.menu.urls(main.urls)
source('scrape.funcs.v3.R')
all.urls = alt.menu.urls(main.urls)
source('scrape.funcs.v3.R')
all.urls = alt.menu.urls(main.urls)
source('scrape.funcs.v3.R')
all.urls = alt.menu.urls(main.urls)
source('scrape.funcs.v3.R')
all.urls = alt.menu.urls(main.urls)
source('scrape.funcs.v3.R')
all.urls = alt.menu.urls(main.urls)
grep('/ca/', '/ca/')
grep('/ca/', '/caasdf/')
as.logical(grep('/ca/', '/caasdf/'))
length(grep('/ca/', '/caasdf/'))
length(grep('^/ca/calis', '/caasdf/'))
length(grep('^/ca', '/caasdf/'))
length(grep('^/ca', '/cvaasdf/ca'))
source('scrape.funcs.v3.R')
main.urls = get.city.rest.urls('ca', 'san-jose')
all.urls = alt.menu.urls(main.urls)
source('scrape.funcs.v3.R')
all.urls = alt.menu.urls(main.urls)
get.menus('ca', 'san-jose', file.location)
source('scrape.funcs.v3.R')
nm = state.to.df('nm', file.location)
save(ca, file = paste(file.location, 'CA_', date, '.Rout', sep = ''))
ca = state.to.df('ca', file.location)
save(nm, file = paste(file.location, 'NM_', date, '.Rout', sep = ''))
save(ca, file = paste(file.location, 'CA_', date, '.Rout', sep = ''))
write.table(nm, file = paste(file.location, 'nm.data.v2.txt', sep = ''), row.names = F, col.names = T, sep = ' ', na = 'NA')
write.table(ca, file = paste(file.location, 'ca.data.v2.txt', sep = ''), row.names = F, col.names = T, sep = ' ', na = 'NA')
source('analyzeFuncs.R')
load('./outputs.v2/CA_12_24_2012.Rout')
ca.0 = ca
load('./outputs.v2/NM_12_24_2012.Rout')
nm.0 = nm
load('./outputs.pull2/CA_03_10_2013.Rout')
load('./outputs.pull2/CA_03_10_2013.Rout')
ca.1 = ca
nm.1 = nm
save.image("~/projects/Reich/menu.scrape/.RData")
source('analyzeFuncs.R')
source('scrape.funcs.v3.R')
load('./outputs.v2/CA_12_24_2012.Rout')
load('./outputs.v2/NM_12_24_2012.Rout')
ca.0 = ca
nm.0 = nm
load('./outputs.pull2/CA_03_10_2013.Rout')
load('./outputs.pull2/CA_03_10_2013.Rout')
ca.1 = ca
nm.1 = nm
rm(ca, nm)
ca.1.reformat = reformatLaterDataPull(ca.0, ca.1)
rm(pricesToDifferences)
source('analyzeFuncs.R')
ca.1.reformat = reformatLaterDataPull(ca.0, ca.1)
7%%2
56461%%10000
4000%%1000
nm.1.reformat = reformatLaterDataPull(nm.0, nm.1)
source('scrape.funcs.v3.R')
source('scrape.funcs.v3.R')
source('analyzeFuncs.R')
source('scrape.funcs.v3.R')
nm.1.reformat = reformatLaterDataPull(nm.0, nm.1)
load('./outputs.pull2/NM_03_10_2013.Rout')
nm.1 = nm
nm.1.reformat = reformatLaterDataPull(nm.0, nm.1)
rest.0 = unique(nm.0$restaurant)
for (rest in rest.0){
num0 = sum(nm.0$restaurant == rest)
num1 = sum(nm.1$restaurant == rest)
if (num0 != num1){
print(rest)
}
}
diff = NULL
for (rest in rest.0){
num0 = sum(nm.0$restaurant == rest)
num1 = sum(nm.1$restaurant == rest)
if (num0 != num1){
diff = c(diff, rest)
}
}
diff = NULL
for (rest in rest.0){
num0 = sum(nm.0$restaurant == rest)
num1 = sum(nm.1$restaurant == rest)
if (num0 != num1){
diff = c(diff, rest)
print(num0)
}
}
diff = NULL
for (rest in rest.0){
num0 = sum(nm.0$restaurant == rest)
num1 = sum(nm.1$restaurant == rest)
if (num0 != num1){
diff = c(diff, rest = num0)
}
}
diff[1]
diff = NULL
for (rest in rest.0){
num0 = sum(nm.0$restaurant == rest)
num1 = sum(nm.1$restaurant == rest)
if (num0 != num1){
diff = c(diff, paste(rest) = num0)
}
}
diff = NULL
num = NULL
for (rest in rest.0){
num0 = sum(nm.0$restaurant == rest)
num1 = sum(nm.1$restaurant == rest)
if (num0 != num1){
diff = c(diff, rest)
num = c(num, num0)
}
}
num
diff[9]
nm0[nm0$restaurant == diff[9], ]
nm.0[nm.0$restaurant == diff[9], ]
nm.0[nm.0$restaurant == diff[9], 9]
nm.1[nm.1$restaurant == diff[9], 9]
nm.1[nm.1.reformat$restaurant == diff[9], 9]
nm.1.reformat[nm.1.reformat$restaurant == diff[9], 9]
diff[9]
nm.1[nm.1$restaurant == diff[9], 9]
nm.1[nm.1$restaurant == diff[9], ]
sum(nm.1$restaurant == 'Relish')
rm(ca, nm)
sum(nm.1$restaurant == 'Closed')
sum(nm.1$restaurant == 'location closed or moved')
table(nm.1$restaurant)
p = .4
ev = function(p){return(p^3*(2-p))}
ev(.4)
?apply
for (p in seq(.1, .9, .1)){print(ev(p))}
6/21
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
?xmlAttrs
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
?xmlApply
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
?duplicated
source('scrape.funcs.v3.R')
a = get.city.rest.urls('ca', 'gilroy')
date = '03_10_2013'
file.location = '~/projects/Reich/menu.scrape/outputs.pull2/'
load("~/projects/Reich/menu.scrape/.RData")
nm.cities = c('albuquerque', 'rio-rancho', 'santa-fe', 'las-cruces')
source('scrape.funcs.v3.R')
for (nm.city in 1:length(nm.cities)){
print(nm.cities[nm.city])
get.menus('nm', nm.cities[nm.city], file.location)
}
for (nm.city in 1:length(nm.cities)){
print(nm.cities[nm.city])
get.menus('nm', nm.cities[nm.city], file.location)
}
for (nm.city in 1:length(nm.cities)){
print(nm.cities[nm.city])
get.menus('nm', nm.cities[nm.city], file.location)
}
a = get.city.rest.urls('ca', 'gilroy')
require('XML')
state = 'ca'
city = 'gilroy'
rootUrl <- paste("http://www.allmenus.com/", state, "/", city, "/", sep = '')
doc = htmlTreeParse(rootUrl,isURL=T)
top = xmlRoot(doc)
doc = htmlTreeParse(rootUrl,isURL=T)
source('scrape.funcs.v3.R')
a = get.city.rest.urls('nm', 'albuquerque')
date = '03_18_2013'
file.location = '~/projects/Reich/menu.scrape/outputs.pull2/'
get.menus('nm', 'albuquerque', file.location)
length(nm.0)
length(nm.0[[1]])
length(nm.0[[@]])
length(nm.0[[2]])
length(nm.0[[12]])
names(nm.0)
is.list(nm.0)
load('./outputs.v2/CA_12_24_2012.Rout')
is.list(ca)
is.data.frame(ca)
?do.call
save.image("~/GitHub/IRLE/menu.scrape/analyze.Rdata.RData")
date = '03_23_2013'
file.location = '~/projects/Reich/menu.scrape/outputs.pull2/'
get.menus('ca', 'palo-alto', file.location)
source('scrape.funcs.v3.R')
get.menus('ca', 'palo-alto', file.location)
source('scrape.funcs.v3.R')
paloAltoMain = get.city.rest.urls('ca', 'palo-alto')
paloAltoAll = alt.menu.urls(paloAltoMain)
docs = get.menu.docs(paloAltoAll)
